syntax = "proto3";
package syncano.codebox.broker.v1;
option go_package = "github.com/Syncano/syncanoapis/gen/go/syncano/codebox/broker/v1;broker";

import "syncano/codebox/lb/v1/runner.proto";
import "syncano/codebox/script/v1/script.proto";

service ScriptRunner {
  // Run runs script in secure environment.
  rpc Run (stream RunRequest) returns (stream script.v1.RunResponse);
}

// RunRequest represents either a Meta message, LB Meta or a Chunk message.
// It should always consist of exactly 1 Meta, 1 LB Meta, 1 Script Meta and optionally repeated Script Chunk messages.
message RunRequest {
  // Meta message specifies fields to describe what is being run.
  message Meta {
    map<string, string> files = 1; // Map of script file URL->Name.
    string environment_url = 2; // Environment file URL.
    bytes trace = 3;
    uint64 trace_id = 4;
    bool sync = 5;
  }

  oneof value {
    Meta meta = 1;
    lb.v1.RunRequest.Meta lb_meta = 2;
    script.v1.RunRequest.Meta script_meta = 3;
    script.v1.RunRequest.Chunk script_chunk = 4;
  }
}
