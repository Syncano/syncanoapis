syntax = "proto3";
package syncano.codebox.broker.v1;
option go_package = "github.com/Syncano/syncanoapis/gen/go/syncano/codebox/broker/v1;broker";

import "syncano/codebox/lb/v1/runner.proto";
import "syncano/codebox/script/v1/script.proto";

service ScriptRunner {
  // Run runs script in secure environment.
  rpc Run (stream RunRequest) returns (stream script.v1.RunResponse);
  // SimpleRun is a simpler alternative to Run that does not require streaming request.
  // As such, it is only usable for small payloads and does not support chunks.
  rpc SimpleRun (SimpleRunRequest) returns (stream script.v1.RunResponse);
  // Delete deletes all containers for specified script index.
  rpc Delete (script.v1.DeleteRequest) returns (script.v1.DeleteResponse);
}

// Meta message specifies fields to describe what is being run.
message RunMeta {
  map<string, string> files = 1; // Map of script file URL->Name.
  string environment_url = 2; // Environment file URL.
  bytes trace = 3;
  uint64 trace_id = 4;
  bool sync = 5;
}

// RunRequest represents either a Meta message, LB Meta or a Chunk message.
// It should always consist of exactly 1 Meta, 1 LB Meta, 1 Script Meta and optionally repeated Script Chunk messages.
message RunRequest {
  oneof value {
    RunMeta meta = 1;
    lb.v1.RunMeta lb_meta = 2;
    script.v1.RunMeta script_meta = 3;
    script.v1.RunChunk script_chunk = 4;
  }
}

message SimpleRunRequest {
  RunMeta meta = 1;
  lb.v1.RunMeta lb_meta = 2;
  script.v1.RunMeta script_meta = 3;
}
